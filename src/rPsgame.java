
/*
 * Jovan Gradojevic
 * 28/1/2020
 * Game that allows user to play rock, paper, scissors against a computer then the user can end or see the results.
 */

/**
 *
 * @author jogra6669
 */
public class rPsgame extends javax.swing.JFrame {
    static int computerWins = 0;    //defines the computer wins that will be used later for the results
    static int userWins = 0;    //defines the user wins that will be used later for the results
    static int userTies = 0;    //defines the ties that will be used to check how many games have been played
    /**
     * Randomizes a computer value that is used in every method
     * @return
     */
    public int computerRandom(){
    int computerInput1 = (int) (Math.random() * 3) + 1; //Randomizer between 1-3
    return computerInput1; //Returns the value to other methods when called
    }
    
    /**
     * When user picks rock, the number randomizer calls the other method then it is compared to the move
     */
    public void chooseRock(){
    int computerInput = computerRandom();
        if(computerInput == 1){
                answerRps.setText("It's a tie");
                userTies = userTies + 1;
                buttonDisable();
                    } else if (computerInput == 2){
                    answerRps.setText("Computer picked paper, you lose!");
                    computerWins = computerWins + 1;
                    buttonDisable();
                        } else if (computerInput == 3){
                        answerRps.setText("Computer picked scissors, you win!");
                        userWins = userWins + 1;
                        buttonDisable();
                        }     
    }
    
    /**
     * When user picks paper, the number randomizer calls the other method then it is compared to the move
     */
    public void choosePaper(){
    int computerInput = computerRandom();
        if(computerInput == 2){
                answerRps.setText("It's a tie");
                userTies = userTies + 1;
                buttonDisable();
                    } else if (computerInput == 1){
                    answerRps.setText("Computer picked rock, you win!");
                    userWins = userWins + 1;
                    buttonDisable();
                        } else if (computerInput == 3){
                        answerRps.setText("Computer picked scissors, you lose!");
                        computerWins = computerWins + 1;
                        buttonDisable();
                        }
    }
    
    /**
     * When user picks scissors, the number randomizer calls the other method then it is compared to the move
     */
    public void chooseScissors(){
    int computerInput = computerRandom();
        if(computerInput == 3){
                answerRps.setText("It's a tie");
                userTies = userTies + 1;
                buttonDisable();
                    } else if (computerInput == 2){
                    answerRps.setText("Computer picked paper, you win!");
                    userWins = userWins + 1;
                    buttonDisable();
                        } else if (computerInput == 1){
                        answerRps.setText("Computer picked rock, you lose!");
                        computerWins = computerWins + 1;
                        buttonDisable();
                        }
        
    }
    
    /**
     * Checks if the user has played 3 times by adding the ties, wins, loses, then disables buttons based on this information
     */
    public final void buttonDisable(){
        if(userWins + computerWins + userTies == 3){
            restartRps.setEnabled(true);
            resultsRps.setEnabled(true);
            rockRps.setEnabled(false);
            paperRps.setEnabled(false);
            scissorsRps.setEnabled(false);
            } else {
            restartRps.setEnabled(false);
            resultsRps.setEnabled(false);
            rockRps.setEnabled(true);
            paperRps.setEnabled(true);
            scissorsRps.setEnabled(true);
            }
    }
    /**
     * Creates new form rPsgame
     */
    public rPsgame() {
        initComponents();
        buttonDisable(); //Check the score every time it is initialized
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleRps = new javax.swing.JLabel();
        rockRps = new javax.swing.JButton();
        paperRps = new javax.swing.JButton();
        scissorsRps = new javax.swing.JButton();
        picture3rPs = new javax.swing.JLabel();
        picture1rPs = new javax.swing.JLabel();
        picture2rPs = new javax.swing.JLabel();
        resultsRps = new javax.swing.JButton();
        restartRps = new javax.swing.JButton();
        answerRps = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleRps.setFont(new java.awt.Font("Zap Raygun V2.0", 0, 48)); // NOI18N
        titleRps.setText("Choose your fighter");

        rockRps.setFont(new java.awt.Font("Three Arrows", 1, 18)); // NOI18N
        rockRps.setText("Rock");
        rockRps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockRpsActionPerformed(evt);
            }
        });

        paperRps.setFont(new java.awt.Font("Three Arrows", 1, 18)); // NOI18N
        paperRps.setText("Paper");
        paperRps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperRpsActionPerformed(evt);
            }
        });

        scissorsRps.setFont(new java.awt.Font("Three Arrows", 1, 18)); // NOI18N
        scissorsRps.setText("SCissors");
        scissorsRps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsRpsActionPerformed(evt);
            }
        });

        picture3rPs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5-54540_rock-paper-scissors-ra (1).png"))); // NOI18N

        picture1rPs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/157919722164301317.jpg"))); // NOI18N

        picture2rPs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/157919714130918393.jpg"))); // NOI18N

        resultsRps.setFont(new java.awt.Font("Three Arrows", 1, 18)); // NOI18N
        resultsRps.setText("Results");
        resultsRps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultsRpsActionPerformed(evt);
            }
        });

        restartRps.setFont(new java.awt.Font("Three Arrows", 1, 18)); // NOI18N
        restartRps.setText("End");
        restartRps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartRpsActionPerformed(evt);
            }
        });

        answerRps.setText("................................");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(rockRps)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paperRps)
                .addGap(98, 98, 98)
                .addComponent(scissorsRps)
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture1rPs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(picture2rPs)
                .addGap(27, 27, 27)
                .addComponent(picture3rPs)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(restartRps)
                .addGap(95, 95, 95)
                .addComponent(answerRps)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultsRps)
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(titleRps)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleRps, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(picture2rPs)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scissorsRps, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rockRps)
                                .addComponent(paperRps)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(picture3rPs)
                            .addComponent(picture1rPs))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultsRps)
                    .addComponent(restartRps)
                    .addComponent(answerRps))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rockRpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockRpsActionPerformed
    chooseRock(); //Calls the method when rock is pressed
    }//GEN-LAST:event_rockRpsActionPerformed

    private void paperRpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperRpsActionPerformed
    choosePaper(); //Calls the method when paper is pressed
    }//GEN-LAST:event_paperRpsActionPerformed

    private void scissorsRpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsRpsActionPerformed
    chooseScissors(); //Calls the method when scissors is pressed
    }//GEN-LAST:event_scissorsRpsActionPerformed

    private void resultsRpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultsRpsActionPerformed
    this.setVisible(false);
    new rPsresults().setVisible(true); //Allows user to switch to the result screen   
    }//GEN-LAST:event_resultsRpsActionPerformed

    private void restartRpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartRpsActionPerformed
    System.exit(0); //Exits the game when button is pressed
    }//GEN-LAST:event_restartRpsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rPsgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rPsgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rPsgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rPsgame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rPsgame().setVisible(true);
            }
        });
    }
    
    /**
     * Small method that was used during development to see if the score was changing
     */
    public void statistics(){
        System.out.println(userWins + "");
        System.out.println(computerWins + "");
        System.out.println(userTies + "");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answerRps;
    private javax.swing.JButton paperRps;
    private javax.swing.JLabel picture1rPs;
    private javax.swing.JLabel picture2rPs;
    private javax.swing.JLabel picture3rPs;
    private javax.swing.JButton restartRps;
    private javax.swing.JButton resultsRps;
    private javax.swing.JButton rockRps;
    private javax.swing.JButton scissorsRps;
    private javax.swing.JLabel titleRps;
    // End of variables declaration//GEN-END:variables
}
